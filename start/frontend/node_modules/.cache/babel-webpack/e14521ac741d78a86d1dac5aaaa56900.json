{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PorukaService = /*#__PURE__*/(() => {\n  class PorukaService {\n    constructor(http) {\n      this.http = http;\n      this.uri = 'http://localhost:4000';\n    }\n\n    novaPoruka(kupac, prodavac, naslov, sadrzaj, nekretninaId) {\n      const data = {\n        kupac: kupac,\n        prodavac: prodavac,\n        naslov: naslov,\n        sadrzaj: sadrzaj,\n        nekretninaId: nekretninaId\n      };\n      return this.http.post(`${this.uri}/dodaj-poruku`, data);\n    }\n\n    getChats(username) {\n      const data = {\n        username: username\n      };\n      return this.http.post(`${this.uri}/dohvati-konverzacije-username`, data);\n    }\n\n    getPorukeKonverzacije(id) {\n      const data = {\n        id: id\n      };\n      return this.http.post(`${this.uri}/dohvati-poruke-jedne-konverzacije`, data);\n    }\n\n    novaPorukaUKonverzaciji(posiljalac, idKonverzacija, sadrzaj) {\n      const data = {\n        posiljalac: posiljalac,\n        idKonverzacija: idKonverzacija,\n        sadrzaj: sadrzaj,\n        datum: new Date()\n      };\n      return this.http.post(`${this.uri}/dodaj-poruku-u-konverzaciju`, data);\n    }\n\n    blokirajKorisnika(user1, user2) {\n      const data = {\n        user1: user1,\n        user2: user2\n      };\n      return this.http.post(`${this.uri}/blokiraj-korisnika`, data);\n    }\n\n    odblokirajKorisnika(user1, user2) {\n      const data = {\n        user1: user1,\n        user2: user2\n      };\n      return this.http.post(`${this.uri}/odblokiraj-korisnika`, data);\n    }\n\n    arhivirajKonverzaciju(id) {\n      console.log(id);\n      const data = {\n        id: id\n      };\n      return this.http.post(`${this.uri}/arhiviraj-konverzaciju`, data);\n    }\n\n  }\n\n  PorukaService.ɵfac = function PorukaService_Factory(t) {\n    return new (t || PorukaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PorukaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PorukaService,\n    factory: PorukaService.ɵfac,\n    providedIn: 'root'\n  });\n  return PorukaService;\n})();","map":null,"metadata":{},"sourceType":"module"}